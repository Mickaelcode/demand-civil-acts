// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email      String   @id @unique // Utilisation de @id pour faire de l'email la clé primaire
  name       String
  first_name String
  password   String
  demands    Demand[] // Relation inverse pour accéder aux demandes de l'utilisateur
}

enum Act {
  BORN
  DEATH
  WEDDING
}

enum Status {
  EN_ATTENTE
  REFUSE
  ACCEPTE
}

model Demand {
  id         Int    @id @default(autoincrement())
  actDemand  Act
  emailAdmin String  @default("")
  emailUser  String 
  numActe String

  province     Province
  commune      String
  name         String
  firstName    String
  dateOfBirth  DateTime
  placeOfBirth String
  attachment   String @db.VarChar(255)
  createdAt    DateTime @default(now())

  status Status @default(EN_ATTENTE)
  paid Boolean @default(false)

  user  User          @relation(fields: [emailUser], references: [email])
  admin Administrator @relation(fields: [emailAdmin], references: [email_admin])
  acte Acte @relation(fields: [numActe],references: [numAct])
}

model Administrator {
  email_admin      String   @unique
  name_admin       String
  first_name_admin String
  password_admin   String
  demands          Demand[]
}

enum Province {
  ANTANANARIVO
  FIANARANTSOA
  TOAMASINA
  MAHAJANGA
  ANTSIRANANA
  TOLIARA
}

model Acte {
  numAct       String   @id @unique
  typeActe     Act
  province     Province
  nameCommune  String
  nameCit      String
  firstNameCit String
  dateOB       DateTime
  placeOB      String
  delivrance   DateTime
  father       String
  mother       String
  fileActe     String
  demands Demand []
}
